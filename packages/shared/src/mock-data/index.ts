import { addDays, subDays, addHours, subHours } from 'date-fns';
import type {
  User,
  Provider,
  Service,
  ServiceCategory,
  Booking,
  Transaction,
  Review,
  ChatThread,
  Notification,
  PromoCode,
} from '../types';

// Mock Users (Customers)
export const mockCustomers: User[] = [
  {
    id: 'cust_1',
    email: 'sarah.johnson@email.com',
    role: 'customer',
    profile: {
      firstName: 'Sarah',
      lastName: 'Johnson',
      phone: '+1-555-0123',
      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b47c?w=150',
      preferences: {
        notifications: { email: true, sms: true, push: true, marketing: false },
        language: 'en',
        timezone: 'America/New_York',
      },
    },
    addresses: [
      {
        id: 'addr_1',
        userId: 'cust_1',
        type: 'home',
        street: '123 Oak Street',
        city: 'Austin',
        state: 'TX',
        zipCode: '78701',
        country: 'US',
        isDefault: true,
        coordinates: { lat: 30.2672, lng: -97.7431 },
      },
    ],
    createdAt: subDays(new Date(), 180),
    updatedAt: subDays(new Date(), 5),
  },
  {
    id: 'cust_2',
    email: 'michael.chen@email.com',
    role: 'customer',
    profile: {
      firstName: 'Michael',
      lastName: 'Chen',
      phone: '+1-555-0124',
      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150',
      preferences: {
        notifications: { email: true, sms: false, push: true, marketing: true },
        language: 'en',
        timezone: 'America/Los_Angeles',
      },
    },
    addresses: [
      {
        id: 'addr_2',
        userId: 'cust_2',
        type: 'home',
        street: '456 Pine Avenue',
        city: 'San Francisco',
        state: 'CA',
        zipCode: '94102',
        country: 'US',
        isDefault: true,
        coordinates: { lat: 37.7749, lng: -122.4194 },
      },
    ],
    createdAt: subDays(new Date(), 90),
    updatedAt: subDays(new Date(), 2),
  },
  {
    id: 'cust_3',
    email: 'emma.davis@email.com',
    role: 'customer',
    profile: {
      firstName: 'Emma',
      lastName: 'Davis',
      phone: '+1-555-0125',
      preferences: {
        notifications: { email: true, sms: true, push: false, marketing: false },
        language: 'en',
        timezone: 'America/New_York',
      },
    },
    addresses: [
      {
        id: 'addr_3',
        userId: 'cust_3',
        type: 'home',
        street: '789 Maple Drive',
        city: 'Miami',
        state: 'FL',
        zipCode: '33101',
        country: 'US',
        isDefault: true,
        coordinates: { lat: 25.7617, lng: -80.1918 },
      },
    ],
    createdAt: subDays(new Date(), 30),
    updatedAt: subDays(new Date(), 1),
  },
];

// Mock Providers
export const mockProviders: Provider[] = [
  {
    id: 'prov_1',
    email: 'alex.martinez@rayshine.com',
    role: 'provider',
    profile: {
      firstName: 'Alex',
      lastName: 'Martinez',
      phone: '+1-555-0201',
      avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150',
      preferences: {
        notifications: { email: true, sms: true, push: true, marketing: false },
        language: 'en',
        timezone: 'America/New_York',
      },
    },
    addresses: [
      {
        id: 'addr_prov_1',
        userId: 'prov_1',
        type: 'home',
        street: '321 Service Lane',
        city: 'Austin',
        state: 'TX',
        zipCode: '78702',
        country: 'US',
        isDefault: true,
        coordinates: { lat: 30.2500, lng: -97.7300 },
      },
    ],
    providerProfile: {
      businessName: 'Martinez Home Services',
      bio: 'Professional house cleaning service with 8+ years of experience. Specializing in deep cleaning, move-in/out cleaning, and regular maintenance. Fully insured and bonded.',
      specializations: ['House Cleaning', 'Deep Cleaning', 'Move-in/out Cleaning'],
      serviceAreas: [
        {
          id: 'area_1',
          name: 'Central Austin',
          coordinates: { lat: 30.2672, lng: -97.7431 },
          radius: 15,
        },
      ],
      availability: {
        schedule: {
          monday: { isAvailable: true, startTime: '08:00', endTime: '18:00', breaks: [] },
          tuesday: { isAvailable: true, startTime: '08:00', endTime: '18:00', breaks: [] },
          wednesday: { isAvailable: true, startTime: '08:00', endTime: '18:00', breaks: [] },
          thursday: { isAvailable: true, startTime: '08:00', endTime: '18:00', breaks: [] },
          friday: { isAvailable: true, startTime: '08:00', endTime: '18:00', breaks: [] },
          saturday: { isAvailable: true, startTime: '09:00', endTime: '15:00', breaks: [] },
          sunday: { isAvailable: false, breaks: [] },
        },
        timeOff: [],
        isAvailable: true,
      },
      verification: {
        isVerified: true,
        backgroundCheck: { status: 'approved' },
        insurance: { status: 'approved', expiryDate: addDays(new Date(), 365) },
        license: { status: 'approved' },
        identity: { status: 'approved' },
      },
      stats: {
        totalJobs: 247,
        completedJobs: 241,
        rating: 4.8,
        totalReviews: 189,
        totalEarnings: 24750,
        joinDate: subDays(new Date(), 365),
        lastActiveDate: new Date(),
      },
      isOnline: true,
    },
    createdAt: subDays(new Date(), 365),
    updatedAt: new Date(),
  },
  {
    id: 'prov_2',
    email: 'jessica.wong@rayshine.com',
    role: 'provider',
    profile: {
      firstName: 'Jessica',
      lastName: 'Wong',
      phone: '+1-555-0202',
      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150',
      preferences: {
        notifications: { email: true, sms: true, push: true, marketing: false },
        language: 'en',
        timezone: 'America/Los_Angeles',
      },
    },
    addresses: [
      {
        id: 'addr_prov_2',
        userId: 'prov_2',
        type: 'home',
        street: '654 Business Blvd',
        city: 'San Francisco',
        state: 'CA',
        zipCode: '94103',
        country: 'US',
        isDefault: true,
        coordinates: { lat: 37.7849, lng: -122.4094 },
      },
    ],
    providerProfile: {
      businessName: 'Wong Office Solutions',
      bio: 'Commercial cleaning specialist with expertise in office buildings, retail spaces, and medical facilities. Available for one-time deep cleans and recurring maintenance contracts.',
      specializations: ['Office Cleaning', 'Commercial Cleaning', 'Medical Facility Cleaning'],
      serviceAreas: [
        {
          id: 'area_2',
          name: 'Downtown SF',
          coordinates: { lat: 37.7749, lng: -122.4194 },
          radius: 10,
        },
      ],
      availability: {
        schedule: {
          monday: { isAvailable: true, startTime: '06:00', endTime: '16:00', breaks: [] },
          tuesday: { isAvailable: true, startTime: '06:00', endTime: '16:00', breaks: [] },
          wednesday: { isAvailable: true, startTime: '06:00', endTime: '16:00', breaks: [] },
          thursday: { isAvailable: true, startTime: '06:00', endTime: '16:00', breaks: [] },
          friday: { isAvailable: true, startTime: '06:00', endTime: '16:00', breaks: [] },
          saturday: { isAvailable: false, breaks: [] },
          sunday: { isAvailable: false, breaks: [] },
        },
        timeOff: [],
        isAvailable: true,
      },
      verification: {
        isVerified: true,
        backgroundCheck: { status: 'approved' },
        insurance: { status: 'approved', expiryDate: addDays(new Date(), 200) },
        license: { status: 'approved' },
        identity: { status: 'approved' },
      },
      stats: {
        totalJobs: 156,
        completedJobs: 152,
        rating: 4.9,
        totalReviews: 98,
        totalEarnings: 31200,
        joinDate: subDays(new Date(), 200),
        lastActiveDate: subHours(new Date(), 2),
      },
      isOnline: false,
    },
    createdAt: subDays(new Date(), 200),
    updatedAt: subHours(new Date(), 2),
  },
];

// Mock Service Categories
export const mockServiceCategories: ServiceCategory[] = [
  {
    id: 'cat_home',
    name: 'Home Services',
    description: 'Professional cleaning services for your home',
    icon: 'home',
    color: '#2563eb',
    isActive: true,
    services: [],
  },
  {
    id: 'cat_business',
    name: 'Business Services',
    description: 'Commercial cleaning for offices and businesses',
    icon: 'building',
    color: '#ea580c',
    isActive: true,
    services: [],
  },
  {
    id: 'cat_bins',
    name: 'Bin Cleaning',
    description: 'Trash and recycling bin sanitization',
    icon: 'trash-2',
    color: '#16a34a',
    isActive: true,
    services: [],
  },
  {
    id: 'cat_vehicles',
    name: 'Vehicle Services',
    description: 'Car washing and detailing services',
    icon: 'car',
    color: '#d97706',
    isActive: true,
    services: [],
  },
];

// Mock Services
export const mockServices: Service[] = [
  {
    id: 'serv_1',
    categoryId: 'cat_home',
    name: 'Standard House Cleaning',
    description: 'Complete house cleaning including all rooms, bathrooms, and kitchen',
    basePrice: 120,
    duration: 180,
    isActive: true,
    addOns: [
      { id: 'addon_1', name: 'Inside Oven Cleaning', description: 'Deep clean oven interior', price: 25, isRequired: false },
      { id: 'addon_2', name: 'Inside Fridge Cleaning', description: 'Clean refrigerator interior', price: 20, isRequired: false },
      { id: 'addon_3', name: 'Window Cleaning (Interior)', description: 'Clean all interior windows', price: 30, isRequired: false },
    ],
    requirements: ['Access to all rooms', 'Water and electricity available'],
    images: ['https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400'],
    createdAt: subDays(new Date(), 100),
    updatedAt: subDays(new Date(), 10),
  },
  {
    id: 'serv_2',
    categoryId: 'cat_home',
    name: 'Deep Cleaning Service',
    description: 'Intensive deep cleaning including baseboards, light fixtures, and detailed scrubbing',
    basePrice: 200,
    duration: 300,
    isActive: true,
    addOns: [
      { id: 'addon_4', name: 'Carpet Steam Cleaning', description: 'Professional carpet cleaning', price: 50, isRequired: false },
      { id: 'addon_5', name: 'Garage Cleaning', description: 'Clean and organize garage space', price: 40, isRequired: false },
    ],
    requirements: ['4+ hour time block', 'Access to all areas'],
    images: ['https://images.unsplash.com/photo-1581578731548-c64695cc6952?w=400'],
    createdAt: subDays(new Date(), 90),
    updatedAt: subDays(new Date(), 5),
  },
  {
    id: 'serv_3',
    categoryId: 'cat_business',
    name: 'Office Cleaning',
    description: 'Professional office cleaning including workstations, conference rooms, and common areas',
    basePrice: 150,
    duration: 120,
    isActive: true,
    addOns: [
      { id: 'addon_6', name: 'Carpet Vacuuming', description: 'Thorough carpet cleaning', price: 25, isRequired: false },
      { id: 'addon_7', name: 'Kitchen/Break Room Deep Clean', description: 'Detailed kitchen cleaning', price: 35, isRequired: false },
    ],
    requirements: ['After-hours access preferred', 'Security code if needed'],
    images: ['https://images.unsplash.com/photo-1497366216548-37526070297c?w=400'],
    createdAt: subDays(new Date(), 80),
    updatedAt: subDays(new Date(), 3),
  },
  {
    id: 'serv_4',
    categoryId: 'cat_bins',
    name: 'Residential Bin Cleaning',
    description: 'Sanitization and deodorizing of trash and recycling bins',
    basePrice: 25,
    duration: 30,
    isActive: true,
    addOns: [
      { id: 'addon_8', name: 'Extra Bins', description: 'Additional bins beyond the first two', price: 10, isRequired: false },
    ],
    requirements: ['Bins accessible on cleaning day', 'Water source nearby'],
    images: ['https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400'],
    createdAt: subDays(new Date(), 70),
    updatedAt: subDays(new Date(), 1),
  },
];

// Mock Bookings
export const mockBookings: Booking[] = [
  {
    id: 'book_1',
    customerId: 'cust_1',
    providerId: 'prov_1',
    serviceId: 'serv_1',
    status: 'completed',
    scheduledDate: subDays(new Date(), 7),
    scheduledTime: '10:00',
    estimatedDuration: 180,
    address: mockCustomers[0].addresses[0],
    pricing: {
      basePrice: 120,
      addOnTotal: 25,
      subtotal: 145,
      tax: 11.60,
      total: 156.60,
    },
    addOns: [
      { id: 'ba_1', addOnId: 'addon_1', name: 'Inside Oven Cleaning', price: 25, quantity: 1 },
    ],
    notes: 'Please focus on the kitchen and bathrooms',
    createdAt: subDays(new Date(), 14),
    updatedAt: subDays(new Date(), 7),
    completedAt: subDays(new Date(), 7),
  },
  {
    id: 'book_2',
    customerId: 'cust_2',
    providerId: 'prov_2',
    serviceId: 'serv_3',
    status: 'confirmed',
    scheduledDate: addDays(new Date(), 2),
    scheduledTime: '18:00',
    estimatedDuration: 120,
    address: mockCustomers[1].addresses[0],
    pricing: {
      basePrice: 150,
      addOnTotal: 0,
      subtotal: 150,
      tax: 12.00,
      total: 162.00,
    },
    addOns: [],
    notes: 'Office building, 3rd floor. Security code: 1234',
    createdAt: subDays(new Date(), 3),
    updatedAt: subDays(new Date(), 1),
  },
  {
    id: 'book_3',
    customerId: 'cust_3',
    serviceId: 'serv_2',
    status: 'pending',
    scheduledDate: addDays(new Date(), 5),
    scheduledTime: '09:00',
    estimatedDuration: 300,
    address: mockCustomers[2].addresses[0],
    pricing: {
      basePrice: 200,
      addOnTotal: 50,
      subtotal: 250,
      tax: 20.00,
      total: 270.00,
    },
    addOns: [
      { id: 'ba_2', addOnId: 'addon_4', name: 'Carpet Steam Cleaning', price: 50, quantity: 1 },
    ],
    specialInstructions: 'Two cats in the house, please be careful with doors',
    createdAt: subDays(new Date(), 1),
    updatedAt: subDays(new Date(), 1),
  },
];

// Mock Transactions
export const mockTransactions: Transaction[] = [
  {
    id: 'txn_1',
    bookingId: 'book_1',
    customerId: 'cust_1',
    providerId: 'prov_1',
    type: 'payment',
    amount: 156.60,
    status: 'completed',
    paymentMethod: {
      id: 'pm_1',
      type: 'card',
      last4: '4242',
      brand: 'visa',
      expiryMonth: 12,
      expiryYear: 2025,
      isDefault: true,
    },
    processingFee: 4.70,
    netAmount: 151.90,
    description: 'Payment for Standard House Cleaning',
    createdAt: subDays(new Date(), 7),
    processedAt: subDays(new Date(), 7),
  },
  {
    id: 'txn_2',
    bookingId: 'book_1',
    customerId: 'cust_1',
    providerId: 'prov_1',
    type: 'payout',
    amount: 125.28,
    status: 'completed',
    paymentMethod: {
      id: 'pm_prov_1',
      type: 'bank',
      last4: '1234',
      isDefault: true,
    },
    processingFee: 0,
    netAmount: 125.28,
    description: 'Payout for Standard House Cleaning',
    createdAt: subDays(new Date(), 5),
    processedAt: subDays(new Date(), 5),
  },
];

// Mock Reviews
export const mockReviews: Review[] = [
  {
    id: 'rev_1',
    bookingId: 'book_1',
    reviewerId: 'cust_1',
    revieweeId: 'prov_1',
    rating: 5,
    comment: 'Excellent service! Alex was thorough, professional, and left my house spotless. The oven cleaning add-on was definitely worth it.',
    categories: [
      { name: 'Quality', rating: 5 },
      { name: 'Timeliness', rating: 5 },
      { name: 'Communication', rating: 5 },
      { name: 'Professionalism', rating: 5 },
    ],
    isPublic: true,
    response: {
      content: 'Thank you so much for the kind words, Sarah! It was a pleasure working with you.',
      createdAt: subDays(new Date(), 6),
    },
    createdAt: subDays(new Date(), 6),
    updatedAt: subDays(new Date(), 6),
  },
];

// Mock Chat Threads
export const mockChatThreads: ChatThread[] = [
  {
    id: 'chat_1',
    bookingId: 'book_2',
    participants: ['cust_2', 'prov_2'],
    messages: [
      {
        id: 'msg_1',
        threadId: 'chat_1',
        senderId: 'cust_2',
        content: 'Hi Jessica, just confirming our appointment for Thursday at 6 PM',
        type: 'text',
        isRead: true,
        createdAt: subDays(new Date(), 1),
      },
      {
        id: 'msg_2',
        threadId: 'chat_1',
        senderId: 'prov_2',
        content: 'Yes, confirmed! I have the security code. See you Thursday.',
        type: 'text',
        isRead: true,
        createdAt: subHours(new Date(), 18),
      },
    ],
    isActive: true,
    createdAt: subDays(new Date(), 1),
    updatedAt: subHours(new Date(), 18),
  },
];

// Mock Notifications
export const mockNotifications: Notification[] = [
  {
    id: 'notif_1',
    userId: 'cust_1',
    type: 'job_completed',
    title: 'Service Completed',
    message: 'Your house cleaning service has been completed. Please rate your experience.',
    data: { bookingId: 'book_1' },
    isRead: true,
    createdAt: subDays(new Date(), 7),
  },
  {
    id: 'notif_2',
    userId: 'cust_2',
    type: 'booking_confirmed',
    title: 'Booking Confirmed',
    message: 'Your office cleaning appointment is confirmed for Thursday at 6:00 PM',
    data: { bookingId: 'book_2' },
    isRead: false,
    createdAt: subDays(new Date(), 1),
  },
  {
    id: 'notif_3',
    userId: 'prov_1',
    type: 'payment_processed',
    title: 'Payment Received',
    message: 'You have received $125.28 for your completed service',
    data: { transactionId: 'txn_2' },
    isRead: false,
    createdAt: subDays(new Date(), 5),
  },
];

// Mock Promo Codes
export const mockPromoCodes: PromoCode[] = [
  {
    id: 'promo_1',
    code: 'WELCOME20',
    type: 'percentage',
    value: 20,
    minOrderAmount: 100,
    maxDiscount: 50,
    usageLimit: 1000,
    usageCount: 156,
    isActive: true,
    validFrom: subDays(new Date(), 30),
    validUntil: addDays(new Date(), 60),
  },
  {
    id: 'promo_2',
    code: 'SAVE25',
    type: 'fixed',
    value: 25,
    minOrderAmount: 150,
    usageLimit: 500,
    usageCount: 89,
    isActive: true,
    validFrom: subDays(new Date(), 7),
    validUntil: addDays(new Date(), 30),
  },
];

// Export all mock data
export const mockData = {
  customers: mockCustomers,
  providers: mockProviders,
  serviceCategories: mockServiceCategories,
  services: mockServices,
  bookings: mockBookings,
  transactions: mockTransactions,
  reviews: mockReviews,
  chatThreads: mockChatThreads,
  notifications: mockNotifications,
  promoCodes: mockPromoCodes,
};
